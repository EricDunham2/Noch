@model  NochWeb.Models.UserModel


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 topBar">
    
</div>

<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 mainContent">
    <h1>Welcome to Noch</h1>
    @if (Session["key"] != null)
    { 
        @:<h1>Logged in as @Session["key"]</h1>
    }
    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#signInModal">Sign In</button>
    @using (Html.BeginForm("SignOutConfirm", "Home"))
    {
    <button type="submit" class="btn btn-info btn-lg" data-toggle="modal" data-target="#signInModal">Sign Out</button>
    }
    <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#registerModal">Register</button>
</div>

@using (Html.BeginForm("SignInConfirm", "Home"))
{
<div id="signInModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Sign In</h4>
            </div>
            <div class="modal-body">
                <div style="display: inline-block">
                    <label>Username</label>
                    <input name="username" id="loginUsername" />
                </div>
                <div style="display: inline-block">
                    <label>Password</label>
                    <input name="password" id="loginPassword" type="password" />
                </div>
            </div>
            <div class="modal-footer">
                <input type="submit" class="btn btn-success" value="Sign In" style="top:10px ; position:relative" />
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
}

@using (Ajax.BeginForm("RegisterConfirm", "Home", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    LoadingElementId = "ajaxSplash",
    UpdateTargetId = "ajaxMsg",
    OnSuccess = "onSuccessorFailure",
    OnFailure = "onSuccessorFailure"
}))
{
    @Html.AntiForgeryToken()
    <div id="registerModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Register</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control text-box single-line" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.RepeatPassword, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-8">
                            @Html.PasswordFor(model => model.RepeatPassword, new { @class = "form-control text-box single-line" })
                            @Html.ValidationMessageFor(model => model.RepeatPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-success" value="Register" style="top:10px ; position:relative" />
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="top:10px ; position:relative">Close</button>
                </div>
            </div>

        </div>
    </div>
}